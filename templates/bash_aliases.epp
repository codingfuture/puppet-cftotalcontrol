
CFTC_SSHCONF="<%= $cftotalcontrol::ssh_config %>"
PSSH_OPTS=-i
SSH_OPTS=

# Call SSH with TotalControl options
function cftc_ssh() {
    ssh -F $CFTC_SSHCONF $SSH_OPTS "$@"
}

# Call SCP with TotalControl options
function cftc_scp() {
    scp -F $CFTC_SSHCONF $SSH_OPTS "$@"
}

# (Re-)generate SSH key
function cftc_gen_key() {
    echo "Please make sure you use password in production!"
    /usr/bin/ssh-keygen -t <%= $cftotalcontrol::ssh_key_type %> -b <%= $cftotalcontrol::ssh_key_bits %> -f <%= $cftotalcontrol::ssh_idkey %>
}

# Initialize agent and add ssh key
function cftc_add_key() {
    test -n "$SSH_AUTH_SOCK" && test -e "$SSH_AUTH_SOCK" || \
        eval `ssh-agent` && ssh-add <%= $cftotalcontrol::ssh_idkey %>
}

# Add key on startup
test -e <%= $cftotalcontrol::ssh_idkey %> && cftc_add_key

# Mass sequential SSH invocation
#--------------------------------------
function ssh_masscmd() {
    for n in $(cat <%= $cftotalcontrol::ssh_dir %>/cftchostsall); do
        cftc_ssh "$n" -- "$@"
    done
}
<% $cftotalcontrol::mass_commands_all.each |$cmdname, $cmd| { -%>
function ssh_mass_<%= $cmdname %>() {
    ssh_masscmd <%= $cmd %>
}
<% } -%>


# Mass parallel SSH invocation
#--------------------------------------
function pssh_masscmd() {
    parallel-ssh \
        -x "-F $CFTC_SSHCONF $SSH_OPTS" \
        -h <%= $cftotalcontrol::ssh_dir %>/cftchostsall \
        -p <%= $cftotalcontrol::parallel %> \
        $PSSH_OPTS \
        "$@"
}
<% $cftotalcontrol::mass_commands_all.each |$cmdname, $cmd| { -%>
function pssh_mass_<%= $cmdname %>() {
    pssh_masscmd <%= $cmd %> "$@"
}
<% } -%>


<% $cftotalcontrol::node_alias.each |$nodename, $nodealias| { -%>
# Node <%= $nodename %>
#--------------------------------------
function ssh_<%= $nodealias %>() {
    cftc_ssh "<%= $nodename %>" -- "$@"
}
<% $cftotalcontrol::mass_commands_all.each |$cmdname, $cmd| { -%>
function ssh_<%= $nodealias %>_<%= $cmdname %>() {
    ssh_<%= $nodealias %> <%= $cmd %> "$@"
}
<% } -%>

<% } -%>

<% $cftotalcontrol::node_groups.each |$groupname, $nodes| { 
    $host_file = "${cftotalcontrol::ssh_dir}/cftchosts_${groupname}"
-%>
# Group <%= $groupname %>
#--------------------------------------
function sshgrp_<%= $groupname %>() {
    for n in $(cat <%= $host_file %>); do
        cftc_ssh "$n" -- "$@"
    done
}
<% $cftotalcontrol::mass_commands_all.each |$cmdname, $cmd| { -%>
function sshgrp_<%= $groupname %>_<%= $cmdname %>() {
    sshgrp_<%= $groupname %> <%= $cmd %> "$@"
}
<% } -%>

function psshgrp_<%= $groupname %>() {
    parallel-ssh \
        -x "-F $CFTC_SSHCONF $SSH_OPTS" \
        -h <%= $host_file %> \
        -p <%= $cftotalcontrol::parallel %> \
        $PSSH_OPTS \
        "$@"
}
<% $cftotalcontrol::mass_commands_all.each |$cmdname, $cmd| { -%>
function psshgrp_<%= $groupname %>_<%= $cmdname %>() {
    psshgrp_<%= $groupname %> <%= $cmd %> "$@"
}
<% } -%>

<% } -%>


